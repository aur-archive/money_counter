#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
_READ_PRINT () {
    echo -n "
Подготовить файл для печати? "
  read -n1 x
  echo
  if [ "${x}" = 'y' -o "${x}" = 'Y' ]
    then
      echo -n "Укажите полный путь к файлу (по умолчанию ${PRN}): "
      read -e y
      echo
      [ -z "${y}" ] && y="${PRN}"
      echo "




" > ${y}
      cat ${1} >> ${y}
      [ $? -eq 0 ] && echo "Файл ${y} создан."
  fi
}
#-Функция чтения времени----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
_READ_TIME () {
  COM=''
  DEFAULT=`date +%H:%M`
  while [ -n "$1" ]
    do
      case $1 in
        '-text')
          shift
          COM="$1";;
        '-time')
          shift
          DEFAULT="$1";;
      esac
      shift
    done
  echo -n "Укажите время "
  [ -n "${COM}" ] && echo -n "${COM} "
  echo -n "в виде HH:MM (по умолчанию ${DEFAULT}): "
  tput sc
  echo "__:__ "
  tput rc
  read -n2 x
  if [ ! -z ${x} ] 
    then
      TIME="${x}"
      echo -n ':'
      read -n2 x
      TIME="${TIME}:${x}"
      echo
    else
      TIME="${DEFAULT}"
  fi
}
#-Функция ожидания нажатия ENTER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
_STOP () {
  tput civis
  echo "Для продолжения нажмите ENTER"
  stty -echo
  read
  stty echo
  tput cnorm
}
#-Фукция удаления старых файлов---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
_CL_FILE () {
DIR="$1"
COUNT="$2"
while [ `ls -1tr ${DIR} | wc-l` -ge "${COUNT}" ]
  do
    FILE=`ls -1tr ${DIR} | head -1`
    FILE="${DIR}/${FILE}"
    rm ${FILE}
  done
}
#-Функция очистки лог-файла от старых записей-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
_CL_LOG () {
  COUNT="$1"
  if [ `cat ${LOG} | wc -l` -ge "${COUNT}" ]
    then
      tail -${COUNT} ${LOG} > ${TMP}
      cat ${TMP} > ${LOG}
  fi
}
#-Функция выхода------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
_EXIT () {
  CODE_ERROR="$1"
  _CL_TMP
  exit ${CODE_ERROR}
}
#-Функция удаления временных файлов-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
_CL_TMP () {
  [ -d "${TMP_DIR}" ] && rm -R "${TMP_DIR}" 
}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
