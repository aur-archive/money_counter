#-------------------------------------------------------------------------------------------------------------
_VARS_DATE (){
  DAY_TYPE=''
  DAY_TYPE=`cat ${CALEND} | grep "$1" | awk -F'|' '{print $2}'`
  DATA=`echo $1 | awk -F'.' '{print $1}'`
  MOUNT=`echo $1 | awk -F'.' '{print $2}'`
  case ${MOUNT} in
    01)
      MOUNT_TEXT='январь'
      KVART=1
      ;;
    02)
      MOUNT_TEXT='февраль'
      KVART=1
      ;;
    03)
      MOUNT_TEXT='март'
      KVART=1
      ;;
    04)
      MOUNT_TEXT='апрель'
      KVART=2
      ;;
    05)
      MOUNT_TEXT='май'
      KVART=2
      ;;
    06)
      MOUNT_TEXT='июнь'
      KVART=2
      ;;
    07)
      MOUNT_TEXT='июль'
      KVART=3
      ;;
    08)
      MOUNT_TEXT='август'
      KVART=3
      ;;
    09)
      MOUNT_TEXT='сентябрь'
      KVART=3
      ;;
    10)
      MOUNT_TEXT='октябрь'
      KVART=4
      ;;
    11)
      MOUNT_TEXT='ноябрь'
      KVART=4
      ;;
    12)
      MOUNT_TEXT='декабрь'
      KVART=4
      ;;
  esac
  YEAR=`echo $1 | awk -F'.' '{print $3}'`
}
#-------------------------------------------------------------------------------------------------------------
_READ_DATE () {
  SPISOK="$*"
  COM=''
  DEFAULT=${NOW_DATE}
  while [ -n "$1" ]
    do
      case $1 in
        '-text')
          shift
          COM="$1";;
        '-date')
          shift
          DEFAULT="$1";;
      esac
      shift
    done
  echo -n "Укажите дату "
  [ -n "${COM}" ] && echo -n "${COM} "
  echo -n "в виде dd.mm.YYYY (по умолчанию ${DEFAULT}): "
  tput sc
  echo "__.__.____"
  tput rc
  read -n2 DATA
  if [ -n "${DATA}" ]
    then
      echo -n '.'
      read -n2 MOUNT
      echo -n '.'
      read -n4 YEAR
      DATE="${DATA}.${MOUNT}.${YEAR}"
      echo
    else
      DATE="${DEFAULT}"
  fi
  _CONTROL_DATE "${DATE}"
  if [ "${ERROR_DATE}" -ne '0' ]
    then
      echo "
Неверный ввод!
"
      _READ_DATE ${SPISOK}
  fi
}
#-------------------------------------------------------------------------------------------------------------
_MAX_DATA () {
  YEAR_TYPE=${YEAR}
  let "YEAR_TYPE %= 4"  
  case ${MOUNT} in
    01)MAX='31';;
    02)MAX='28'; [ "${YEAR_TYPE}" -eq '0' ] && MAX='29';;
    03)MAX='31';;
    04)MAX='30';;
    05)MAX='31';;
    06)MAX='30';;
    07)MAX='31';;
    08)MAX='31';;
    09)MAX='30';;
    10)MAX='31';;
    11)MAX='30';;
    12)MAX='31';;
  esac
}
#-------------------------------------------------------------------------------------------------------------
_PREV_DATA () {
  _VARS_DATE "$1"
  DATA=`echo "${DATA}-1" | bc`
  if [ "${DATA}" -eq '0' ]
    then
      MOUNT=`echo "${MOUNT}-1" | bc`
      if [ "${MOUNT}" -eq '0' ]
        then
          YEAR=`echo "${YEAR}-1" | bc`
          MOUNT=12
      fi
      [ `echo ${MOUNT} | wc -c` -eq '2' ] && MOUNT="0${MOUNT}"
      _MAX_DATA
      DATA=${MAX}
  fi
  [ `echo ${DATA} | wc -c` -eq '2' ] && DATA="0${DATA}"
  DATE="${DATA}.${MOUNT}.${YEAR}"
  _VARS_DATE "${DATE}"
}
#-------------------------------------------------------------------------------------------------------------
_NEXT_DATA () {
  _VARS_DATE "$1"
  _MAX_DATA
  DATA=`echo "${DATA}+1" | bc`
  if [ "${DATA}" -gt "${MAX}" ]
    then
      DATA=01
      MOUNT=`echo "${MOUNT}+1" | bc`
      if [ "${MOUNT}" -gt '12' ]
        then
          MOUNT=01
          YEAR=`echo "${YEAR}+1" | bc`
      fi
      [ `echo ${MOUNT} | wc -c` -eq '2' ] && MOUNT="0${MOUNT}"
  fi
  [ `echo ${DATA} | wc -c` -eq '2' ] && DATA="0${DATA}"
  DATE="${DATA}.${MOUNT}.${YEAR}"
  _VARS_DATE "${DATE}"
}
#-------------------------------------------------------------------------------------------------------------
_WHO_MORE () {
  SRAVN=''
  DATE_1=`echo $1 | awk -F'.' '{print $3 $2 $1}'`
  DATE_2=`echo $2 | awk -F'.' '{print $3 $2 $1}'`
  [ "${DATE_1}" \> "${DATE_2}" ] && SRAVN=1
  [ "${DATE_1}" \< "${DATE_2}" ] && SRAVN=2
  [ "${DATE_1}" == "${DATE_2}" ] && SRAVN=0
}
#-------------------------------------------------------------------------------------------------------------
_CONTROL_DATE () {
  _VARS_DATE "$1"
  _MAX_DATA
  ERROR_DATE='0'
  [ "${DATA}" \> "${MAX}" -o "${DATA}" \< '01' ] && ERROR_DATE='1'
  [ "${MOUNT}" != '01' -a "${MOUNT}" != '02' -a "${MOUNT}" != '03' -a "${MOUNT}" != '04' -a "${MOUNT}" != '05' -a "${MOUNT}" != '06' -a "${MOUNT}" != '07' -a "${MOUNT}" != '08' -a "${MOUNT}" != '09' -a "${MOUNT}" != '10' -a "${MOUNT}" != '11' -a "${MOUNT}" != '12' ] && ERROR_DATE='2'
}
#-------------------------------------------------------------------------------------------------------------
